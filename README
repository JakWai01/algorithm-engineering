# Algorithm Engineering Exercise 1

## Usage

### Die optimierte Binary bauen 

Rust installieren

```
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
```

Im Hauptverzeichnis den folgenden Befehl ausführen

```
cargo b --release
```

### Ausführen

Im Hauptverzeichnis den folgenden Befehl ausfüHauptverzeichnis

```
./target/release/algorithm-engineering <graph e.g. stgtregbz.fmi> <source-target-tuples e.g. examples/input_stg>
```

### Example Output Waibel.t0

```
377371 754742 436627 802us
377371 754743 435351 777us
377371 754744 437063 907us
377371 754745 435471 869us
377371 754746 438107 867us
377371 754747 438051 822us
377371 754748 436052 842us
377371 754749 438168 868us
377371 754750 437887 849us
377371 754751 435675 839us
```

### Example Output Waibel.t1

```
0 307636
1 306520
2 310111
3 311382
4 312548
5 320697
6 319141
7 322498
8 323921
9 324877
10 326104
```