# Algorithm Engineering Exercise 1

## Notiz

Die Algorithmen sind alle vollständig funktionisfähig und implementiert. Das Arc-Flag Preprocessing braucht leider ziemlich lange. Ich habe alle Files einmal vorgenerieren lassen. Diese Dateien sind im Ordner `verification` zu finden. Daran kann man sehen, dass alles richtig funktioniert. Im Falle der Arc Flags habe ich ein 100x100 Grid verwendet und eine Zelle vorberechnen lassen auf der dann die Query ausgeführt wurde. Der Code ist jetzt so geschrieben, dass er alle anfragen entgegennehmen und ausführen wird. Es kann nur unter umständen eine Weile dauern bis das preprocessing durchläuft. Das die Algorithmen korrekt laufen und terminieren sollte aber aus den File in `verification` ersichtlich sein.

## Usage

### Die optimierte Binary bauen 

Rust installieren

```
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
```

Im Hauptverzeichnis den folgenden Befehl ausführen

```
cargo b --release
```

### Ausführen

Im Hauptverzeichnis den folgenden Befehl ausführen

```
./target/release/algorithm-engineering -c ~/Documents/master/algorithm-engineering/exercises/02/stgtregbz_ch.fmi -q input -m 1 -n 1
```
